# uses https://github.com/justmiles/go-markdown2confluence to publish a README.md or other specified document(s) to Confluence
name: publish-to-confluence-reusable-workflow
on:
  workflow_call:
    inputs:
      comment:
        description: (Optional) Add comment to page
        required: false
        type: string
      exclude:
        description: List of exclude file patterns (regex) that will be applied on markdown file paths.
        required: false
        type: string
      modified_since:
        description: Only upload files that have modifed in the past n minutes.
        required: false
        type: number
      parent:
        description: Optional parent page to nest content under.  Separate multiple parent pages with /.
        required: false
        type: string
      space:
        description: Confluence space under which content should be published.  Default TXM.
        required: false
        default: TXM
        type: string
      title:
        description: Set the page title on upload (defaults to filename without extension).
        required: false
        type: string
      use_document_title:
        description: Will use the Markdown document title (# Title) if available.  Default false.
        required: false
        default: false
        type: string
      documents:
        description: The documents to upload.  Can be a directory of documents or a single file.  Default is README.md.
        required: false
        default: README.md
        type: string

    outputs:
      confluence_url:
        value: ${{ jobs.publish-to-confluence.outputs.confluence_url }}

jobs:
  publish-to-confluence:
    runs-on: ubuntu-latest

    container:
      image: nexus.txm.tools/golang:1.18.2
      credentials:
        username: ${{ secrets.NEXUS_USER_CI_DOCKER }}
        password: ${{ secrets.NEXUS_PASSWORD_CI_DOCKER }}
      env:
        CONFLUENCE_USERNAME: opex@tempus-ex.com
        CONFLUENCE_PASSWORD: ${{ secrets.MARKDOWN_CONFLUENCE }}
        CONFLUENCE_ENDPOINT: https://epf.atlassian.net/wiki

    permissions: write-all

    steps:
      - name: download and install markdown2confluence
        run: |
          curl -u ${{secrets.NEXUS_USER_CI_RAW}}:${{secrets.NEXUS_PASSWORD_CI_RAW}} https://nexus.txm.tools/repository/raw-txm/go-markdown2confluence_3.4.6_linux_x86_64.tar.gz --output go-markdown2confluence_3.4.6_linux_x86_64.tar.gz
          tar -xzvf go-markdown2confluence_3.4.6_linux_x86_64.tar.gz -C /usr/local/bin/ markdown2confluence
        shell: bash

      - name: checkout git repo
        uses: actions/checkout@v3

      - name: config global safe directory
        run: |
          git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}

      - name: process inputs and publish
        id: process-inputs-and-publish
        env:
          comment: ${{ inputs.comment }}
          exclude: ${{ inputs.exclude }}
          modified_since: ${{ inputs.modified_since }}
          parent: ${{ inputs.parent }}
          space: ${{ inputs.space }}
          title: ${{ inputs.title }}
          use_document_title: ${{ inputs.use_document_title }}
          documents: ${{ inputs.documents }}
        run: |
          set -x
          echo "publishing specified document(s) to Confluence..."
          
          if [[ "${{ inputs.use_document_title }}" == "true" ]]; then  
            publish_result=$(markdown2confluence ${comment:+--comment "${comment}"} ${exclude:+--exclude "${exclude}"} ${modified_since:+--modified-since $modified_since} ${space:+--space "${space}"} ${parent:+--parent "${parent}"} --use-document-title $documents)
            echo "confluence_url=$publish_result" >> $GITHUB_OUTPUT
            if [[ -z "${GITHUB_OUTPUT}" ]]; then echo "GITHUB_OUTPUT zero length or unset! Aborting"; exit 1; fi
          else
            publish_result=$(markdown2confluence ${comment:+--comment "${comment}"} ${exclude:+--exclude "${exclude}"} ${modified_since:+--modified-since $modified_since} ${space:+--space "${space}"} ${parent:+--parent "${parent}"} ${title:+--title "${title}"} $documents)            
            echo "confluence_url=$publish_result" >> $GITHUB_OUTPUT
            if [[ -z "${GITHUB_OUTPUT}" ]]; then echo "GITHUB_OUTPUT zero length or unset! Aborting"; exit 1; fi          
          fi
        shell: bash
