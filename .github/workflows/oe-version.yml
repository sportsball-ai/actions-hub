name: oe-version

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

      tag:
        required: false
        type: boolean
        default: false
      
      npm:
        required: false
        type: boolean
        default: false

jobs:
  oe-version:
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/sportsball-ai/oe-cli:${{ inputs.version }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    permissions: read-all

    outputs:
      new_version_tag: ${{ steps.calculate-version.outputs.version }}
    
    steps:
      - name: checkout git repo
        uses: actions/checkout@v3

      - name: grant permission for unsafe repository
        run: |
          git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}
      
      - name: set github user and email
        run: |
          git config --global user.email "ci@tempus-ex.com"
          git config --global user.name "tempus-bot"

      - name: fetch git tags
        run: git fetch --prune --unshallow --tags

      - name: calculate latest version
        id: calculate-version
        run: |
          echo "current version: $(oe version)"
          echo "branch name: $GITHUB_HEAD_REF"
          NEW_VERSION_TAG=$(oe version -i -b $GITHUB_HEAD_REF) && export NEW_VERSION_TAG
          echo "new version: $NEW_VERSION_TAG"
          echo "::set-output name=version::$NEW_VERSION_TAG"

      - name: tag using oe
        if: ${{ inputs.tag && !inputs.npm && (github.base_ref == "main" || startsWith(github.base_ref, "v") ) }}
        run: |
          oe version -i -b $GITHUB_HEAD_REF --push -y
          echo "version successfully updated"
          git push origin $GITHUB_BASE_REF
          git push origin --tags
          echo "pushed new version to repo"
      
      - name: tag using npm
        if: ${{ inputs.tag && inputs.npm && (github.base_ref == "main" || startsWith(github.base_ref, "v") )  }}
        run: |
          NEW_VERSION_TAG=$(oe version -i -b $GITHUB_HEAD_REF) && export NEW_VERSION_TAG
          npm version $NEW_VERSION_TAG
          echo "NPM version successfully updated"
          git push origin $GITHUB_BASE_REF
          git push origin --tags
          echo "pushed new version tag: $NEW_VERSION_TAG to repo"
